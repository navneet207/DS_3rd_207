
#include<stdio.h>
#include<string.h>
void push(int *top, char stack[],int size, char ele){
    if((*top)==size-1){
        printf("Overflow\n");
        return;
    }
    (*top)++;
    stack[(*top)] = ele;
}
char pop(int *top,char stack[]){
    if((*top)==-1){
        printf("Underflow\n");
        return '\0';
    }
    char back = stack[*top];
    (*top)--;
    return back;
}

char peek(int *top,char stack[]){
    if((*top)==-1){
        printf("No element inside the stack\n");
        return '\0';
    }
    return stack[*top];
}

int isEmpty(int *top){
    return *top==-1;
}

int precedence(char c){
    if(c=='+'|| c=='-'){
        return 1;
    } else if(c=='*'||c=='/'||c=='%'){
        return 2;
    } else if(c=='^'){
        return 3;
    } else{
        return -1;
    }
}


int main(){

    printf("Enter the length of the infix expression: \n");
    int size;
    scanf("%d",&size);
    getchar();
    char infix[size];
    char stack[size];
    char postfix[size];
    int ind=0;
    int top = -1;
    printf("Enter the infix expression: \n");
    gets(infix);
    // printf("The entered infix expression is %s\n",infix);
    for(int i=0;i<strlen(infix);i++){
        char c = infix[i];
        if((c>='a'&&c<='z')||(c>='A'&&c<='Z')||(c>='0'&&c<='9')){
            postfix[ind++] = c;
        } else if(c=='('){
            push(&top,stack,size,'(');
        } else if(c==')'){
            while(!isEmpty(&top)&&peek(&top,stack)!='('){
                postfix[ind++] = pop(&top,stack);
            }
            pop(&top,stack);
        } else {
            while(!isEmpty(&top)&&precedence(c)<=precedence(peek(&top,stack))){
                postfix[ind++] = pop(&top,stack);
            }
            push(&top,stack,size,c);
        }
    }


    while(!isEmpty(&top)){
        postfix[ind++] = pop(&top,stack);
    }

    // printf("The postfix expression is %s",postfix);
    for(int i=0;i<strlen(postfix);i++){
        printf("%c",postfix[i]);
    }
    return 0;
}
